{
	"info": {
		"_postman_id": "5d14edce-fde4-4489-a55e-8e4d79bf676d",
		"name": "PoC - RFC",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "All cars",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:5001/api/cars",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"api",
						"cars"
					]
				},
				"description": "Always return a list with items, which can be an empty list."
			},
			"response": []
		},
		{
			"name": "Car by id",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:5001/api/cars/:id",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"api",
						"cars",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "dc4faaa3-12f0-43d3-8618-d3af10deaf15"
						}
					]
				},
				"description": "Return car object, or 404.\r\nThe 404 follows RFC."
			},
			"response": []
		},
		{
			"name": "Incorrect request",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Model\": \"4 Gran Coupe\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:5001/api/cars",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"api",
						"cars"
					]
				},
				"description": "This will try to create a new car, but contains a 400.\r\nThe 400 follows RFC and is generated by FluentValidation."
			},
			"response": []
		},
		{
			"name": "Create new car",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"Brand\": \"BMW\",\r\n    \"Model\": \"4 Gran Coupe\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:5001/api/cars",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "5001",
					"path": [
						"api",
						"cars"
					]
				},
				"description": "This will try to create a new car.\r\nThe first time it'll work, but the second time it'll throw an exception.\r\nThe exception follows RFC and is generated by the exception handler lambda in combination with the NxtPortException."
			},
			"response": []
		}
	]
}